image: node:20-slim

include:
  - project: 'ExplorViz/code/deployment'
    file: '.gitlab-ci-docker-manifest.yml'

cache:
  paths:
    - node_modules/
    - .npm/

stages:
  - code-analysis
  - test
  - deploy:images
  - deploy:retagging

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"

linting:
  stage: code-analysis
  tags:
    - exec-docker
  before_script:
    - npm install
  script:
    - npm run lint

test:
  stage: test
  tags:
    - exec-docker
  script:
    - npm install
    - npm run test

.deploy-to-dockerhub:
  stage: deploy:images
  tags:
    - exec-docker
  variables:
    DOCKERHUB_TAG: "latest"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CONTAINER_REGISTRY_URL\":{\"auth\":\"$(echo -n ${DOCKERHUB_USERNAME}:${DOCKERHUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/Dockerfile
      --destination=$DOCKERHUB_ORGANIZATION/$DOCKERHUB_IMAGE_NAME:$DOCKERHUB_TAG

deploy-backend-amd64:
  extends:
    - .deploy-to-dockerhub
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "main"'

deploy-backend-arm64:
  extends:
    - .deploy-to-dockerhub
  tags:
    - arm64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

retag-backend-as-latest:
  extends: .retag-dockerhub-image
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "schedule"
      when: never
  variables:
    SOURCE_TAG: "amd64"
    TARGET_TAG: "latest"

publish-multi-arch-backend:
  extends: .retag-as-multi-arch-dockerhub-image
  variables:
    MANIFEST_PLATFORMS: "linux/amd64,linux/arm64/v8"
